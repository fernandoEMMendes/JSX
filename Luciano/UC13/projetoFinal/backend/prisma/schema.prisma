// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id    String @id @default(uuid())
  nome  String
  email String
  senha String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("usuarios")
}

model Motoqueiro {
  id       String @id @default(uuid())
  nome     String
  nusuario String
  senha    String

  Pedidos Pedidos[]

  create_at DateTime @default(now())
  update_at DateTime @default(now())

  @@map("motoqueiros")
}

model Cliente {
  id       String @id @default(uuid())
  nome     String
  tel_cel  String
  email    String
  senha    String
  cpf      String
  cep      String
  nMoradia String
  rua      String
  bairro   String
  cidade   String

  Pedidos Pedidos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("clientes")
}

model Categoria {
  id   String @id @default(uuid())
  nome String

  produtos Produto[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("categorias")
}

model Produto {
  id         String  @id @default(uuid())
  nome       String
  fabricante String?
  preco      Decimal @db.Decimal(9, 2)
  quantidade String  @default("0")
  banner     String

  categorias  Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId String

  Pedidos_item Pedidos_item[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("produtos")
}

model Pedidos {
  id            String   @id @default(uuid())
  num           Int      @unique @default(autoincrement())
  status        String   @default("Rascunho")
  draft         Boolean  @default(true)
  aceito        Boolean  @default(false)
  entrega       Boolean  @default(false)
  observacao    String?
  ped_val_total Decimal? @db.Decimal(9, 2)

  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId String

  motoqueiro   Motoqueiro? @relation(fields: [motoqueiroId], references: [id])
  motoqueiroId String?

  Pedidos_item Pedidos_item[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())
}

model Pedidos_item {
  id        String @id @default(uuid())
  quant     String
  val_total Decimal? @db.Decimal(9, 2)

  produto   Produto @relation(fields: [produtoId], references: [id])
  produtoId String

  pedido   Pedidos @relation(fields: [pedidoId], references: [id])
  pedidoId String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())
}
